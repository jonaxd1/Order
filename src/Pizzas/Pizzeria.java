/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Pizzas;

import static Pizzas.cantidad_pizzas.*;
import static Pizzas.cantidad_pizza2.*;
import static Pizzas.cantidad_pizza3.*;
import static Pizzas.cantidad_pizza4.*;
import static Pizzas.cantidad_pizza5.*;
import static Pizzas.cantidad_pizza6.*;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrador
 */
public class Pizzeria extends javax.swing.JFrame {

    public static String nombre;
    public static String tipo = "Hawaiiana";
    public static Double st = 0.0;
    public static Double stp = 0.0;
    public static Double ri = 0.0;
    public static Double stt = 0.0;
    public static Integer nt = 0;
    public static Double c1 = 0.0, c2 = 0.0, c3 = 0.0, c4 = 0.0, c5 = 0.0, c6 = 0.0;
    public static Integer cp1 = 0, cp2 = 0, cp3 = 0, cp4 = 0, cp5 = 0, cp6 = 0, aux1 = 0, aux = 0;
    public static Integer p1 = 0, p2 = 0, p3 = 0, p4 = 0, p5 = 0, p6 = 0;
    static pedido pd = new pedido(new javax.swing.JFrame(), true);
    static cantidad can = new cantidad(new javax.swing.JFrame(), true);
    static cantidad_pizza2 canp = new cantidad_pizza2(new javax.swing.JFrame(), true);
    static cantidad_pizza3 canp2 = new cantidad_pizza3(new javax.swing.JFrame(), true);
    static cantidad_pizza4 canp3 = new cantidad_pizza4(new javax.swing.JFrame(), true);
    static cantidad_pizza5 canp4 = new cantidad_pizza5(new javax.swing.JFrame(), true);
    static cantidad_pizza6 canp5 = new cantidad_pizza6(new javax.swing.JFrame(), true);
    static cantidad_pizzas canp6 = new cantidad_pizzas(new javax.swing.JFrame(), true);
    private Double r, rd, ju, ag, te, cafe;
    private String sql = "";

    /**
     * Creates new form Pizzeria
     */
    public Pizzeria() {
        getContentPane().setBackground(new java.awt.Color(255, 255, 255));
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Pizza's Soberano Cacahuate");
        btn_ordenar.setEnabled(false);
        Image icon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/IMAGE/icono.png"));
        setIconImage(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btn_ordenar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        cbi_1 = new javax.swing.JCheckBox();
        cbi_2 = new javax.swing.JCheckBox();
        cbi_3 = new javax.swing.JCheckBox();
        cbi_4 = new javax.swing.JCheckBox();
        cbi_5 = new javax.swing.JCheckBox();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        cb_1 = new javax.swing.JCheckBox();
        cb_3 = new javax.swing.JCheckBox();
        cb_4 = new javax.swing.JCheckBox();
        rbtn_1 = new javax.swing.JRadioButton();
        rbtn_2 = new javax.swing.JRadioButton();
        rbtn_3 = new javax.swing.JRadioButton();
        rbtn_4 = new javax.swing.JRadioButton();
        rbtn_5 = new javax.swing.JRadioButton();
        rbtn_6 = new javax.swing.JRadioButton();
        cb_2 = new javax.swing.JCheckBox();
        cb_5 = new javax.swing.JCheckBox();
        cb_6 = new javax.swing.JCheckBox();
        cbi_6 = new javax.swing.JCheckBox();
        txt_s = new javax.swing.JTextField();
        user = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jLabel1.setText(" Me vale un soberano cacahuate © 2014.All rights reserved.");

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(3, 3, 3));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("SUBTOTAL");

        jLabel3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(3, 3, 3));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("TIPO DE PIZZA");

        jLabel7.setFont(new java.awt.Font("Tempus Sans ITC", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("INGREDIENTES EXTRA ");

        btn_ordenar.setForeground(new java.awt.Color(0, 0, 2));
        btn_ordenar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/btn_ordenar.png"))); // NOI18N
        btn_ordenar.setToolTipText("");
        btn_ordenar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_ordenar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_ordenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ordenarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tempus Sans ITC", 1, 12)); // NOI18N
        jLabel5.setText("NOMBRE");

        txt_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nombreKeyTyped(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/banner.png"))); // NOI18N

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        cbi_1.setText("Queso");
        cbi_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbi_1ActionPerformed(evt);
            }
        });

        cbi_2.setText("Champiñones");
        cbi_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbi_2ActionPerformed(evt);
            }
        });

        cbi_3.setText("Jamón");
        cbi_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbi_3ActionPerformed(evt);
            }
        });

        cbi_4.setText("Salami");
        cbi_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbi_4ActionPerformed(evt);
            }
        });

        cbi_5.setText("Piña");
        cbi_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbi_5ActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel4.setFont(new java.awt.Font("Tempus Sans ITC", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("BEBIDAS");

        cb_1.setText("Refresco");
        cb_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_1ActionPerformed(evt);
            }
        });

        cb_3.setText("Jugo");
        cb_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_3ActionPerformed(evt);
            }
        });

        cb_4.setText("Agua");
        cb_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_4ActionPerformed(evt);
            }
        });

        rbtn_1.setText("Hawaiiana");
        rbtn_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_1ActionPerformed(evt);
            }
        });

        rbtn_2.setText("Mexicana");
        rbtn_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_2ActionPerformed(evt);
            }
        });

        rbtn_3.setText("Americana");
        rbtn_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_3ActionPerformed(evt);
            }
        });

        rbtn_4.setText("Peperoni");
        rbtn_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_4ActionPerformed(evt);
            }
        });

        rbtn_5.setText("Vegetariana");
        rbtn_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_5ActionPerformed(evt);
            }
        });

        rbtn_6.setText("Italiana");
        rbtn_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_6ActionPerformed(evt);
            }
        });

        cb_2.setText("Refresco Dietetico");
        cb_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_2ActionPerformed(evt);
            }
        });

        cb_5.setText("Té");
        cb_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_5ActionPerformed(evt);
            }
        });

        cb_6.setText("Café");
        cb_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_6ActionPerformed(evt);
            }
        });

        cbi_6.setText("Pasto");
        cbi_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbi_6ActionPerformed(evt);
            }
        });

        txt_s.setEditable(false);

        jMenu1.setText("File");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Administrar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Cerrar Sesión");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem2.setText("About Pizza's Soberano Cacahuate");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                            .addComponent(user, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_ordenar, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txt_nombre))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(68, 68, 68)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(rbtn_1)
                                            .addComponent(rbtn_2)
                                            .addComponent(rbtn_3)
                                            .addComponent(rbtn_4)
                                            .addComponent(rbtn_5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(rbtn_6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbi_1)
                                            .addComponent(cbi_2)
                                            .addComponent(cbi_3)
                                            .addComponent(cbi_4)
                                            .addComponent(cbi_5)
                                            .addComponent(cbi_6))
                                        .addGap(112, 112, 112)))
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cb_1)
                                    .addComponent(cb_3)
                                    .addComponent(cb_2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cb_5)
                                    .addComponent(cb_6)
                                    .addComponent(cb_4)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_s, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel3)
                        .addGap(36, 36, 36)
                        .addComponent(rbtn_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbtn_2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbtn_3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbtn_4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbtn_5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtn_6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbi_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbi_2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbi_3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbi_4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbi_5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbi_6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                            .addComponent(jSeparator1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txt_s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cb_1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cb_4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cb_5)
                                    .addComponent(cb_2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cb_6)
                                    .addComponent(cb_3))))))
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_ordenar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(13, 13, 13)
                        .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ordenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ordenarActionPerformed
        //Arreglo para guardar y enviar datos
        String[] datos = new String[4];
        //guardar nombre del cliente
        nombre = txt_nombre.getText();
        if (stt == 0.0) {
            JOptionPane.showMessageDialog(null, "Debe escoger al menos un tipo de pizza", "Error", JOptionPane.ERROR_MESSAGE);
            btn_ordenar.setEnabled(false);
            rbtn_1.setSelected(false);
            rbtn_2.setSelected(false);
            rbtn_3.setSelected(false);
            rbtn_4.setSelected(false);
            rbtn_5.setSelected(false);
            rbtn_6.setSelected(false);
        } else {
            if (!nombre.equals("")) {
                try {
                    PreparedStatement pst = cn.prepareStatement("INSERT INTO clientes (nombre) VALUES (?)");
                    pst.setString(1, txt_nombre.getText());
                    pst.executeUpdate();
                } catch (Exception e) {
                    System.err.println(e.getMessage());
                }
                //instanciar la clase
                Calendar fecha = new GregorianCalendar();
                //Conseguir la hora y guardarla
                int año = fecha.get(Calendar.YEAR);
                int mes = fecha.get(Calendar.MONTH);
                int dia = fecha.get(Calendar.DAY_OF_MONTH);
                int hora = fecha.get(Calendar.HOUR_OF_DAY);
                int minuto = fecha.get(Calendar.MINUTE);
                int segundo = fecha.get(Calendar.SECOND);
                //Enviar valores a etiquetas
                pd.lbl_1.setText("Fecha:  " + dia + "/" + (mes + 1) + "/" + año);
                String dia_bd = año + "-" + (mes + 1) + "-" + dia;
                pd.lbl_2.setText("Hora:  " + hora + ":" + (minuto) + ":" + segundo);
                String hora_bd = hora + ":" + minuto + ":" + segundo;
                pd.lbl_4.setText("Nombre del Cliente:   " + nombre);
                pd.lbl_r.setText(ri.toString());
                //intentar la suma        
                try {
                    stt = st + ri + stp;
                } catch (NullPointerException e) {
                }
                //Enviar valores a BD
                try {
                    PreparedStatement pst = cn.prepareStatement("INSERT INTO ticket (nombre_cliente,hora,fecha,total) "
                            + "VALUES ('" + nombre + "','" + hora_bd + "','" + dia_bd + "'," + stt + ")");
                    pst.executeUpdate();
                } catch (Exception e) {
                    System.err.println(e.getMessage());
                }
                //enviar total
                pd.lbl_t.setText(stt.toString());
                //Entrada de registros pizzas
                if (rbtn_1.isSelected() == true) {
                    Integer cant = cp1 / p1;
                    datos[0] = cant.toString();
                    datos[1] = "Pizza Hawaiiana";
                    datos[2] = p1.toString();
                    datos[3] = cp1.toString();
                    pd.modelo.addRow(datos);
                }
                if (rbtn_2.isSelected() == true) {
                    Integer cant = cp2 / p2;
                    datos[0] = cant.toString();
                    datos[1] = "Pizza Mexicana";
                    datos[2] = p2.toString();
                    datos[3] = cp2.toString();
                    pd.modelo.addRow(datos);
                }
                if (rbtn_3.isSelected() == true) {
                    Integer cant = cp3 / p3;
                    datos[0] = cant.toString();
                    datos[1] = "Pizza Americana";
                    datos[2] = p3.toString();
                    datos[3] = cp3.toString();
                    pd.modelo.addRow(datos);
                }
                if (rbtn_4.isSelected() == true) {
                    Integer cant = cp4 / p4;
                    datos[0] = cant.toString();
                    datos[1] = "Pizza Peperoni";
                    datos[2] = p4.toString();
                    datos[3] = cp4.toString();
                    pd.modelo.addRow(datos);
                }
                if (rbtn_5.isSelected() == true) {
                    Integer cant = cp5 / p5;
                    datos[0] = cant.toString();
                    datos[1] = "Pizza Vegetariana";
                    datos[2] = p5.toString();
                    datos[3] = cp5.toString();
                    pd.modelo.addRow(datos);
                }
                if (rbtn_6.isSelected() == true) {
                    Integer cant = cp6 / p6;
                    datos[0] = cant.toString();
                    datos[1] = "Pizza Italiana";
                    datos[2] = p6.toString();
                    datos[3] = cp6.toString();
                    pd.modelo.addRow(datos);
                }
                //entrada de registros de bebidas
                if (cb_1.isSelected() == true) {
                    Integer cant = (int) ((int) Math.floor(c1) / r);
                    datos[0] = cant.toString();
                    datos[1] = "Refresco";
                    datos[2] = r.toString();
                    datos[3] = c1.toString();
                    pd.modelo.addRow(datos);
                }
                if (cb_2.isSelected() == true) {
                    Integer cant = (int) ((int) Math.floor(c2) / rd);
                    datos[0] = (cant.toString());
                    datos[1] = "Refresco Dietetico";
                    datos[2] = rd.toString();
                    datos[3] = c2.toString();
                    pd.modelo.addRow(datos);
                }
                if (cb_3.isSelected() == true) {
                    Integer cant = (int) ((int) Math.floor(c3) / ju);
                    datos[0] = (cant.toString());
                    datos[1] = "Jugo";
                    datos[2] = ju.toString();
                    datos[3] = c3.toString();
                    pd.modelo.addRow(datos);
                }
                if (cb_4.isSelected() == true) {
                    Integer cant = (int) ((int) Math.floor(c4) / ag);
                    datos[0] = (cant.toString());
                    datos[1] = "Agua";
                    datos[2] = ag.toString();
                    datos[3] = c4.toString();
                    pd.modelo.addRow(datos);
                }
                if (cb_5.isSelected() == true) {
                    Integer cant = (int) ((int) Math.floor(c5) / te);
                    datos[0] = (cant.toString());
                    datos[1] = "Té";
                    datos[2] = te.toString();
                    datos[3] = c5.toString();
                    pd.modelo.addRow(datos);
                }
                if (cb_6.isSelected() == true) {
                    Integer cant = (int) ((int) Math.floor(c1) / cafe);
                    datos[0] = (cant.toString());
                    datos[1] = "Café";
                    datos[2] = cafe.toString();
                    datos[3] = c6.toString();
                    pd.modelo.addRow(datos);
                }
                //Consulta para numero de ticket
                String sql1 = "SELECT id_ticket FROM ticket ORDER BY id_ticket DESC LIMIT 1";
                try {
                    Statement st = cn.createStatement();
                    ResultSet rs = st.executeQuery(sql1);
                    while (rs.next()) {
                        nt = rs.getInt(1);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
                }
                //Enviar numero de ticket
                pd.lbl_3.setText("Ticket:  " + (nt));
                //mostrar mensaje
                JOptionPane.showMessageDialog(null, "Orden recibida con exito.", "Orden", JOptionPane.DEFAULT_OPTION);
                //visible la ventana de pedido
                pd.setVisible(true);
                //limpiar campos
                txt_nombre.setText("");
                txt_s.setText("");
                can.snr_1.setValue(1);
                canp.snr_2.setValue(1);
                cb_1.setSelected(false);
                cb_2.setSelected(false);
                cb_3.setSelected(false);
                cb_4.setSelected(false);
                cb_5.setSelected(false);
                cb_6.setSelected(false);
                cbi_1.setSelected(false);
                cbi_2.setSelected(false);
                cbi_3.setSelected(false);
                cbi_4.setSelected(false);
                cbi_5.setSelected(false);
                cbi_6.setSelected(false);
                rbtn_1.setSelected(false);
                rbtn_2.setSelected(false);
                rbtn_3.setSelected(false);
                rbtn_4.setSelected(false);
                rbtn_5.setSelected(false);
                rbtn_6.setSelected(false);
                btn_ordenar.setEnabled(false);
                stt = 0.0;
                st = 0.0;
                stp = 0.0;
                ri = 0.0;
            } else {
                JOptionPane.showMessageDialog(null, "Debe llenar el campo NOMBRE. Porfavor intentelo de nuevo", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_ordenarActionPerformed

    private void rbtn_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtn_1ActionPerformed
        if (rbtn_1.isSelected() == true) {
            canp.setVisible(true);
            aux1 = (Integer) (canp.snr_2.getValue());
            p1 = precio2;
            cp1 = aux1 * p1;
            stp += cp1;
            if (btn_ordenar.isEnabled() == false) {
                btn_ordenar.setEnabled(true);
            }
        } else {
            stp -= cp1;
            if (btn_ordenar.isEnabled() == true && rbtn_2.isSelected() == false && rbtn_3.isSelected() == false && rbtn_4.isSelected() == false && rbtn_5.isSelected() == false && rbtn_6.isSelected() == false) {
                btn_ordenar.setEnabled(false);
            }
        }
        try {
            stt = st + ri + stp;
        } catch (NullPointerException e) {
        }
        txt_s.setText(stt.toString());
    }//GEN-LAST:event_rbtn_1ActionPerformed

    private void cb_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_1ActionPerformed
        try {
            sql = ("SELECT precio FROM bebidas WHERE nombre='Refresco'");
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                r = rs.getDouble(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (cb_1.isSelected() == true) {
            can.setVisible(true);
            aux = (Integer) (can.snr_1.getValue());
            c1 = aux * r;
            st += c1;
        }
        if (cb_1.isSelected() == false) {
            st -= c1;
        }
        try {
            stt = st + ri + stp;
        } catch (NullPointerException e) {
        }
        txt_s.setText(stt.toString());
    }//GEN-LAST:event_cb_1ActionPerformed

    private void cb_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_2ActionPerformed
        try {
            sql = ("SELECT precio FROM bebidas WHERE nombre='Refresco Dietetico'");
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                rd = rs.getDouble(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (cb_2.isSelected() == true) {
            can.setVisible(true);
            aux = (Integer) (can.snr_1.getValue());
            c2 = aux * rd;
            st += c2;
        }
        if (cb_2.isSelected() == false) {
            st -= c2;
        }
        try {
            stt = st + ri + stp;
        } catch (NullPointerException e) {
        }
        txt_s.setText(stt.toString());
    }//GEN-LAST:event_cb_2ActionPerformed

    private void cb_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_3ActionPerformed
        try {
            sql = ("SELECT precio FROM bebidas WHERE nombre='Jugo'");
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                ju = rs.getDouble(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (cb_3.isSelected() == true) {
            can.setVisible(true);
            aux = (Integer) (can.snr_1.getValue());
            c3 = aux * ju;
            st += c3;
        }
        if (cb_3.isSelected() == false) {
            st -= c3;
        }
        try {
            stt = st + ri + stp;
        } catch (NullPointerException e) {
        }
        txt_s.setText(stt.toString());
    }//GEN-LAST:event_cb_3ActionPerformed

    private void cb_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_4ActionPerformed
        try {
            sql = ("SELECT precio FROM bebidas WHERE nombre='Agua'");
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                ag = rs.getDouble(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (cb_4.isSelected() == true) {
            can.setVisible(true);
            aux = (Integer) (can.snr_1.getValue());
            c4 = aux * ag;
            st += c4;
        }
        if (cb_4.isSelected() == false) {
            st -= c4;
        }
        try {
            stt = st + ri + stp;
        } catch (NullPointerException e) {
        }
        txt_s.setText(stt.toString());
    }//GEN-LAST:event_cb_4ActionPerformed

    private void cb_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_5ActionPerformed
        try {
            sql = ("SELECT precio FROM bebidas WHERE nombre='Té'");
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                te = rs.getDouble(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (cb_5.isSelected() == true) {
            can.setVisible(true);
            aux = (Integer) (can.snr_1.getValue());
            c5 = aux * te;
            st += c5;
        }
        if (cb_5.isSelected() == false) {
            st -= c5;
        }
        try {
            stt = st + ri + stp;
        } catch (NullPointerException e) {
        }
        txt_s.setText(stt.toString());
    }//GEN-LAST:event_cb_5ActionPerformed

    private void cb_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_6ActionPerformed
        try {
            sql = ("SELECT precio FROM bebidas WHERE nombre='Café'");
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                cafe = rs.getDouble(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (cb_6.isSelected() == true) {
            can.setVisible(true);
            aux = (Integer) (can.snr_1.getValue());
            c6 = aux * cafe;
            st += c6;
        }
        if (cb_6.isSelected() == false) {
            st -= c6;
        }
        try {
            stt = st + ri + stp;
        } catch (NullPointerException e) {
        }
        txt_s.setText(stt.toString());
    }//GEN-LAST:event_cb_6ActionPerformed

    private void cbi_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbi_1ActionPerformed
        if (cbi_1.isSelected() == true) {
            ri += 10.0;
        }
        if (cbi_1.isSelected() == false) {
            ri -= 10.0;
        }
        try {
            stt = st + ri + stp;
        } catch (NullPointerException e) {
        }
        txt_s.setText(stt.toString());
    }//GEN-LAST:event_cbi_1ActionPerformed

    private void cbi_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbi_2ActionPerformed
        if (cbi_2.isSelected() == true) {
            ri += 10.0;
        }
        if (cbi_2.isSelected() == false) {
            ri -= 10.0;
        }
        try {
            stt = st + ri + stp;
        } catch (NullPointerException e) {
        }
        txt_s.setText(stt.toString());
    }//GEN-LAST:event_cbi_2ActionPerformed

    private void cbi_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbi_3ActionPerformed
        if (cbi_3.isSelected() == true) {
            ri += 10.0;
        }
        if (cbi_3.isSelected() == false) {
            ri -= 10.0;
        }
        try {
            stt = st + ri + stp;
        } catch (NullPointerException e) {
        }
        txt_s.setText(stt.toString());
    }//GEN-LAST:event_cbi_3ActionPerformed

    private void cbi_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbi_4ActionPerformed
        if (cbi_4.isSelected() == true) {
            ri += 10.0;
        }
        if (cbi_4.isSelected() == false) {
            ri -= 10.0;
        }
        try {
            stt = st + ri + stp;
        } catch (NullPointerException e) {
        }
        txt_s.setText(stt.toString());
    }//GEN-LAST:event_cbi_4ActionPerformed

    private void cbi_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbi_5ActionPerformed
        if (cbi_5.isSelected() == true) {
            ri += 10.0;
        }
        if (cbi_5.isSelected() == false) {
            ri -= 10.0;
        }
        try {
            stt = st + ri + stp;
        } catch (NullPointerException e) {
        }
        txt_s.setText(stt.toString());
    }//GEN-LAST:event_cbi_5ActionPerformed

    private void cbi_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbi_6ActionPerformed
        if (cbi_6.isSelected() == true) {
            ri += 10.0;
        }
        if (cbi_6.isSelected() == false) {
            ri -= 10.0;
        }
        try {
            stt = st + ri + stp;
        } catch (NullPointerException e) {
        }
        txt_s.setText(stt.toString());
    }//GEN-LAST:event_cbi_6ActionPerformed

    private void txt_nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombreKeyTyped
        char letra = evt.getKeyChar();
        if ((letra < 'a' || letra > 'z') && (letra < 'A' || letra > 'Z') && (letra != (char) KeyEvent.VK_BACK_SPACE) && (letra != (char) KeyEvent.VK_SPACE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txt_nombreKeyTyped

    private void rbtn_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtn_2ActionPerformed
        if (rbtn_2.isSelected() == true) {
            canp2.setVisible(true);
            tipo = "Mexicana";
            p2 = precio3;
            aux1 = (Integer) (canp.snr_2.getValue());
            cp2 = aux1 * p2;
            stp += cp2;
            if (btn_ordenar.isEnabled() == false) {
                btn_ordenar.setEnabled(true);
            }
        } else {
            stp -= cp2;
            if (btn_ordenar.isEnabled() == true && rbtn_1.isSelected() == false && rbtn_3.isSelected() == false && rbtn_4.isSelected() == false && rbtn_5.isSelected() == false && rbtn_6.isSelected() == false) {
                btn_ordenar.setEnabled(false);
            }
        }
        try {
            stt = st + ri + stp;
        } catch (NullPointerException e) {
        }
        txt_s.setText(stt.toString());
    }//GEN-LAST:event_rbtn_2ActionPerformed

    private void rbtn_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtn_3ActionPerformed
        if (rbtn_3.isSelected() == true) {
            canp3.setVisible(true);
            tipo = "Americana";
            p3 = precio4;
            aux1 = (Integer) (canp.snr_2.getValue());
            cp3 = aux1 * p3;
            stp += cp3;
            if (btn_ordenar.isEnabled() == false) {
                btn_ordenar.setEnabled(true);
            }
        } else {
            stp -= cp3;
            if (btn_ordenar.isEnabled() == true && rbtn_1.isSelected() == false && rbtn_2.isSelected() == false && rbtn_4.isSelected() == false && rbtn_5.isSelected() == false && rbtn_6.isSelected() == false) {
                btn_ordenar.setEnabled(false);
            }
        }
        try {
            stt = st + ri + stp;
        } catch (NullPointerException e) {
        }
        txt_s.setText(stt.toString());
    }//GEN-LAST:event_rbtn_3ActionPerformed

    private void rbtn_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtn_4ActionPerformed
        if (rbtn_4.isSelected() == true) {
            canp4.setVisible(true);
            tipo = "Peperoni";
            p4 = precio5;
            aux1 = (Integer) (canp.snr_2.getValue());
            cp4 = aux1 * p4;
            stp += cp4;
            if (btn_ordenar.isEnabled() == false) {
                btn_ordenar.setEnabled(true);
            }
        } else {
            stp -= cp4;
            if (btn_ordenar.isEnabled() == true && rbtn_1.isSelected() == false && rbtn_2.isSelected() == false && rbtn_3.isSelected() == false && rbtn_5.isSelected() == false && rbtn_6.isSelected() == false) {
                btn_ordenar.setEnabled(false);
            }
        }
        try {
            stt = st + ri + stp;
        } catch (NullPointerException e) {
        }
        txt_s.setText(stt.toString());
    }//GEN-LAST:event_rbtn_4ActionPerformed

    private void rbtn_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtn_5ActionPerformed
        if (rbtn_5.isSelected() == true) {
            canp5.setVisible(true);
            tipo = "Vegetariana";
            p5 = precio6;
            aux1 = (Integer) (canp.snr_2.getValue());
            cp5 = aux1 * p5;
            stp += cp5;
            if (btn_ordenar.isEnabled() == false) {
                btn_ordenar.setEnabled(true);
            }
        } else {
            stp -= cp5;
            if (btn_ordenar.isEnabled() == true && rbtn_1.isSelected() == false && rbtn_2.isSelected() == false && rbtn_3.isSelected() == false && rbtn_4.isSelected() == false && rbtn_6.isSelected() == false) {
                btn_ordenar.setEnabled(false);
            }
        }
        try {
            stt = st + ri + stp;
        } catch (NullPointerException e) {
        }
        txt_s.setText(stt.toString());
    }//GEN-LAST:event_rbtn_5ActionPerformed

    private void rbtn_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtn_6ActionPerformed
        if (rbtn_6.isSelected() == true) {
            canp6.setVisible(true);
            tipo = "Italiana";
            p6 = precio;
            aux1 = (Integer) (canp.snr_2.getValue());
            cp6 = aux1 * p6;
            stp += cp6;
            if (btn_ordenar.isEnabled() == false) {
                btn_ordenar.setEnabled(true);
            }
        } else {
            stp -= cp6;
            if (btn_ordenar.isEnabled() == true && rbtn_1.isSelected() == false && rbtn_2.isSelected() == false && rbtn_3.isSelected() == false && rbtn_4.isSelected() == false && rbtn_5.isSelected() == false) {
                btn_ordenar.setEnabled(false);
            }
        }
        try {
            stt = st + ri + stp;
        } catch (NullPointerException e) {
        }
        txt_s.setText(stt.toString());
    }//GEN-LAST:event_rbtn_6ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        about ab = new about(new javax.swing.JFrame(), true);
        ab.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        admin ad = new admin(new javax.swing.JFrame(), true);
        ad.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        try {
            acceso acc = new acceso();
            this.dispose();
            acc.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(Pizzeria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pizzeria.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pizzeria.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pizzeria.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pizzeria.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pizzeria().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btn_ordenar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cb_1;
    private javax.swing.JCheckBox cb_2;
    private javax.swing.JCheckBox cb_3;
    private javax.swing.JCheckBox cb_4;
    private javax.swing.JCheckBox cb_5;
    private javax.swing.JCheckBox cb_6;
    private javax.swing.JCheckBox cbi_1;
    private javax.swing.JCheckBox cbi_2;
    private javax.swing.JCheckBox cbi_3;
    private javax.swing.JCheckBox cbi_4;
    private javax.swing.JCheckBox cbi_5;
    private javax.swing.JCheckBox cbi_6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JRadioButton rbtn_1;
    private javax.swing.JRadioButton rbtn_2;
    private javax.swing.JRadioButton rbtn_3;
    private javax.swing.JRadioButton rbtn_4;
    private javax.swing.JRadioButton rbtn_5;
    private javax.swing.JRadioButton rbtn_6;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_s;
    public javax.swing.JLabel user;
    // End of variables declaration//GEN-END:variables
    conectar cc = new conectar();
    Connection cn = cc.conexion();
}
