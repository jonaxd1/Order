/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Pizzas;

import java.awt.event.KeyEvent;
import java.sql.*;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.security.MessageDigest;

/**
 *
 * @author Usuario
 */
public final class admin extends javax.swing.JDialog {

    public String tipo = "administrador";
    private String id = "", idp = "", idb = "";

    /**
     * Creates new form admin
     */
    public admin(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        getContentPane().setBackground(new java.awt.Color(255, 255, 255));
        panel_users.setBackground(new java.awt.Color(19, 100, 120));
        panel_pizzas.setBackground(new java.awt.Color(19, 100, 120));
        panel_bebidas.setBackground(new java.awt.Color(19, 100, 120));
        setLocationRelativeTo(null);
        mostrardatos("");
        mostrardatos1("");
        mostrardatos2("");
        btn_act.setEnabled(false);
        btn_actpizza.setEnabled(false);
        btn_actbebidas.setEnabled(false);
        btn_cancelar.setVisible(false);

    }

    void mostrardatos(String valor) {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("UID");
        modelo.addColumn("Username");
        modelo.addColumn("Tipo");
        t_users.setModel(modelo);
        String sql = "";
        if (valor.equals("")) {
            sql = ("SELECT * FROM users");
        } else {
            sql = ("SELECT * FROM users WHERE uid='" + valor + "' OR username LIKE '%" + valor + "%' OR tipo LIKE '%" + valor + "%'");
        }

        String[] datos = new String[3];
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(4);
                modelo.addRow(datos);
            }
            t_users.setModel(modelo);
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void mostrardatos1(String valor) {
        DefaultTableModel modelo1 = new DefaultTableModel();
        modelo1.addColumn("ID");
        modelo1.addColumn("Nombre");
        modelo1.addColumn("Tipo");
        modelo1.addColumn("Precio");
        t_pizzas.setModel(modelo1);
        String sql = "";
        if (valor.equals("")) {
            sql = ("SELECT * FROM pizza");
        }

        String[] datos = new String[4];
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);
                modelo1.addRow(datos);
            }
            t_pizzas.setModel(modelo1);
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void mostrardatos2(String valor) {
        DefaultTableModel modelo2 = new DefaultTableModel();
        modelo2.addColumn("ID");
        modelo2.addColumn("Nombre");
        modelo2.addColumn("Precio");
        t_bebidas.setModel(modelo2);
        String sql = "";
        if (valor.equals("")) {
            sql = ("SELECT * FROM bebidas");
        }

        String[] datos = new String[3];
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                modelo2.addRow(datos);
            }
            t_bebidas.setModel(modelo2);
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PopupMenu1 = new javax.swing.JPopupMenu();
        mi_mod = new javax.swing.JMenuItem();
        mi_eliminar = new javax.swing.JMenuItem();
        PopupMenu2 = new javax.swing.JPopupMenu();
        mi_modpizza = new javax.swing.JMenuItem();
        PopupMenu3 = new javax.swing.JPopupMenu();
        mi_actbe = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panel_users = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        t_users = new javax.swing.JTable();
        txtbuscar = new javax.swing.JTextField();
        btnbuscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnmd = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        passf_pass = new javax.swing.JPasswordField();
        jSeparator1 = new javax.swing.JSeparator();
        passf_confirm = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_uid = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_newuser = new javax.swing.JTextField();
        btn_reg = new javax.swing.JButton();
        cb_tipo = new javax.swing.JComboBox();
        btn_act = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        panel_pizzas = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        t_pizzas = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txt_idpizza = new javax.swing.JTextField();
        txt_nombrepizza = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt_tipopizza = new javax.swing.JTextField();
        txt_preciopizza = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btn_actpizza = new javax.swing.JButton();
        panel_bebidas = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        t_bebidas = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        txt_idbebidas = new javax.swing.JTextField();
        txt_nombrebebidas = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txt_preciobebidas = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        btn_actbebidas = new javax.swing.JButton();

        mi_mod.setText("Editar");
        mi_mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_modActionPerformed(evt);
            }
        });
        PopupMenu1.add(mi_mod);

        mi_eliminar.setText("Eliminar");
        mi_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_eliminarActionPerformed(evt);
            }
        });
        PopupMenu1.add(mi_eliminar);

        mi_modpizza.setText("Modificar");
        mi_modpizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_modpizzaActionPerformed(evt);
            }
        });
        PopupMenu2.add(mi_modpizza);
        mi_modpizza.getAccessibleContext().setAccessibleParent(PopupMenu2);

        mi_actbe.setText("Actualizar");
        mi_actbe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_actbeActionPerformed(evt);
            }
        });
        PopupMenu3.add(mi_actbe);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        t_users.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        t_users.setColumnSelectionAllowed(true);
        t_users.setComponentPopupMenu(PopupMenu1);
        jScrollPane1.setViewportView(t_users);

        txtbuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbuscarKeyTyped(evt);
            }
        });

        btnbuscar.setText("Buscar Usuario");
        btnbuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nombre de Usuario");

        btnmd.setText("Mostrar Usuarios");
        btnmd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnmd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmdActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Contrase√±a");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("UID");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Confirmar Contrase√±a");

        txt_uid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_uidKeyTyped(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tipo de Usuario");

        txt_newuser.setToolTipText("");

        btn_reg.setText("Registrar");
        btn_reg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_reg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_regActionPerformed(evt);
            }
        });

        cb_tipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "administrador", "usuario" }));
        cb_tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_tipoActionPerformed(evt);
            }
        });

        btn_act.setText("Actualizar");
        btn_act.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_act.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actActionPerformed(evt);
            }
        });

        btn_cancelar.setBackground(new java.awt.Color(220, 0, 0));
        btn_cancelar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btn_cancelar.setForeground(new java.awt.Color(255, 255, 255));
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_usersLayout = new javax.swing.GroupLayout(panel_users);
        panel_users.setLayout(panel_usersLayout);
        panel_usersLayout.setHorizontalGroup(
            panel_usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(panel_usersLayout.createSequentialGroup()
                .addGroup(panel_usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_usersLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(panel_usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panel_usersLayout.createSequentialGroup()
                                .addComponent(txtbuscar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnbuscar)
                                .addGap(18, 18, 18)
                                .addComponent(btnmd))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel_usersLayout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addGroup(panel_usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btn_reg))
                        .addGap(18, 18, 18)
                        .addGroup(panel_usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_usersLayout.createSequentialGroup()
                                .addComponent(btn_act)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt_newuser)
                                .addComponent(cb_tipo, 0, 113, Short.MAX_VALUE)
                                .addComponent(passf_pass)
                                .addComponent(passf_confirm)
                                .addComponent(txt_uid, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        panel_usersLayout.setVerticalGroup(
            panel_usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_usersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_uid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel_usersLayout.createSequentialGroup()
                        .addGroup(panel_usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_newuser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(passf_pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passf_confirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(16, 16, 16)
                .addGroup(panel_usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_cancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel_usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_reg)
                        .addComponent(btn_act)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnmd)
                    .addComponent(btnbuscar)
                    .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Usuarios", panel_users);

        t_pizzas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        t_pizzas.setComponentPopupMenu(PopupMenu2);
        jScrollPane2.setViewportView(t_pizzas);

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ID");

        txt_idpizza.setEditable(false);

        txt_nombrepizza.setEditable(false);

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Nombre");

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Tipo");

        txt_tipopizza.setEditable(false);

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Precio");

        btn_actpizza.setText("Actualizar");
        btn_actpizza.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_actpizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actpizzaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_pizzasLayout = new javax.swing.GroupLayout(panel_pizzas);
        panel_pizzas.setLayout(panel_pizzasLayout);
        panel_pizzasLayout.setHorizontalGroup(
            panel_pizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_pizzasLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(panel_pizzasLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(panel_pizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_pizzasLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(txt_idpizza, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_pizzasLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(txt_nombrepizza, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_pizzasLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(txt_tipopizza, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_pizzasLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(txt_preciopizza, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_actpizza, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_pizzasLayout.setVerticalGroup(
            panel_pizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_pizzasLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(panel_pizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_idpizza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_pizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_nombrepizza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_pizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_tipopizza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_pizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_preciopizza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addComponent(btn_actpizza, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addGap(26, 26, 26))
        );

        jTabbedPane1.addTab("Pizzas", panel_pizzas);

        t_bebidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        t_bebidas.setComponentPopupMenu(PopupMenu3);
        jScrollPane3.setViewportView(t_bebidas);

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("ID");

        txt_idbebidas.setEditable(false);

        txt_nombrebebidas.setEditable(false);

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Nombre");

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Precio");

        btn_actbebidas.setText("Actualizar");
        btn_actbebidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actbebidasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_bebidasLayout = new javax.swing.GroupLayout(panel_bebidas);
        panel_bebidas.setLayout(panel_bebidasLayout);
        panel_bebidasLayout.setHorizontalGroup(
            panel_bebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_bebidasLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
            .addGroup(panel_bebidasLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(panel_bebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_bebidasLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_idbebidas, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_bebidasLayout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_nombrebebidas, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_bebidasLayout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(panel_bebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_actbebidas, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_preciobebidas, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_bebidasLayout.setVerticalGroup(
            panel_bebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_bebidasLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(panel_bebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_idbebidas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_bebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_nombrebebidas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_bebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_preciobebidas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn_actbebidas, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );

        jTabbedPane1.addTab("Bebidas", panel_bebidas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mi_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_eliminarActionPerformed
        int fila = t_users.getSelectedRow();
        try {
            id = t_users.getValueAt(fila, 0).toString();
        } catch (ArrayIndexOutOfBoundsException e) {
        }
        if (fila >= 0) {
            try {
                PreparedStatement pst = cn.prepareStatement("DELETE FROM users WHERE uid='" + id + "'");
                pst.executeUpdate();
                mostrardatos("");
            } catch (Exception e) {
            }
            JOptionPane.showMessageDialog(null, "Producto eliminado con exito", "Exito", JOptionPane.DEFAULT_OPTION);
        } else {
            JOptionPane.showMessageDialog(null, "No selecciono fila");
        }
    }//GEN-LAST:event_mi_eliminarActionPerformed

    private void btnbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarActionPerformed
        mostrardatos(txtbuscar.getText());
    }//GEN-LAST:event_btnbuscarActionPerformed

    private void btnmdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmdActionPerformed
        limpiar();
        mostrardatos("");
    }//GEN-LAST:event_btnmdActionPerformed

    private void btn_regActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_regActionPerformed
        //comprobar que no este vacio el campo de contrase√±a
        if (Arrays.equals(passf_pass.getPassword(), "".toCharArray())) {
            JOptionPane.showMessageDialog(null, "Debe ingresar una contrase√±a", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            //comprobar campo nombre de usuario tenga datos
            if ((txt_newuser.getText().trim().equals(""))) {
                JOptionPane.showMessageDialog(null, "Todos los campos son obligatorios. Porfavor intentelo de nuevo", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                //comprobar que contrase√±as sean iguales
                if (Arrays.equals(passf_pass.getPassword(), passf_confirm.getPassword())) {
                    String pe = "";
                    //intentar encriptar contrase√±a
                    try {
                        pe = md5(passf_pass.getText());
                    } catch (Exception ex) {
                        Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    //obtener uid y nombre de usuario para comprabacion de usuario repetido
                    String us = txt_newuser.getText();
                    String uid = txt_uid.getText();
                    //insertar valores
                    try {
                        PreparedStatement pst = cn.prepareStatement("INSERT INTO users (uid,username,password,tipo) VALUES (?,?,?,?)");
                        pst.setInt(1, Integer.parseInt(txt_uid.getText()));
                        pst.setString(2, txt_newuser.getText());
                        pst.setString(3, pe);
                        pst.setString(4, tipo);
                        pst.executeUpdate();
                        mostrardatos("");
                        JOptionPane.showMessageDialog(null, "¬°Usuario registrado con exito!", "¬°Exito!", JOptionPane.DEFAULT_OPTION);
                        limpiar();
                    } catch (SQLException | NumberFormatException e) {
                        //obtener error y enviar mensaje
                        if (e.getMessage().equals("Duplicate entry '" + uid + "' for key 'PRIMARY'")) {
                            JOptionPane.showMessageDialog(null, "Ese n√∫mero de UID ya existe, porfavor ingrese un valor diferente", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                        if (e.getMessage().equals("For input string: \"\"")) {
                            JOptionPane.showMessageDialog(null, "Debe ingresar un valor en el campo UID. Porfavor intentelo de nuevo", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                        if (e.getMessage().equals("Duplicate entry '" + us + "' for key 'username'")) {
                            JOptionPane.showMessageDialog(null, "Ese nombre de usuario ya existe. Porfavor intentelo de nuevo", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    //enviar mensaje de contrase√±a no coinciden
                } else {
                    JOptionPane.showMessageDialog(null, "Las contrase√±as no coinciden. Porfavor intentelo de nuevo", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btn_regActionPerformed

    private void cb_tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_tipoActionPerformed
        if (cb_tipo.getSelectedIndex() == 0) {
            tipo = "administrador";
        }
        if (cb_tipo.getSelectedIndex() == 1) {
            tipo = "usuario";
        }
    }//GEN-LAST:event_cb_tipoActionPerformed

    private void mi_modActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_modActionPerformed
        btn_cancelar.setVisible(true);
        int fila = 0;
        try {
            fila = t_users.getSelectedRow();
        } catch (ArrayIndexOutOfBoundsException e) {
        }
        try {
            id = (String) t_users.getValueAt(fila, 0);
        } catch (ArrayIndexOutOfBoundsException e) {
        }
        if (fila >= 0) {
            btn_act.setEnabled(true);
            btn_reg.setEnabled(false);
            txt_uid.setEditable(false);
            txt_uid.setText(t_users.getValueAt(fila, 0).toString());
            txt_newuser.setText(t_users.getValueAt(fila, 1).toString());
        } else {
            JOptionPane.showMessageDialog(null, "No selecciono fila");
        }
    }//GEN-LAST:event_mi_modActionPerformed

    private void btn_actActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actActionPerformed
        if (Arrays.equals(passf_pass.getPassword(), "".toCharArray())) {
            JOptionPane.showMessageDialog(null, "Debe ingresar una contrase√±a", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            if (Arrays.equals(passf_pass.getPassword(), passf_confirm.getPassword())) {
                String pe = "";
                try {
                    pe = md5(passf_pass.getText());
                } catch (Exception ex) {
                    Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    PreparedStatement pst = cn.prepareStatement("UPDATE users SET username='" + txt_newuser.getText() + "' ,password='" + pe + "' ,tipo='" + tipo + "' WHERE uid= '" + id + "'");
                    pst.executeUpdate();
                    mostrardatos("");
                    limpiar();
                } catch (Exception e) {
                    System.err.println(e.getMessage());
                }
                JOptionPane.showMessageDialog(null, "Producto actualizado con exito", "Exito", JOptionPane.DEFAULT_OPTION);
                btn_reg.setEnabled(true);
                txt_uid.setEditable(true);
                btn_act.setEnabled(false);
                btn_cancelar.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(null, "Las contrase√±as no coinciden. Porfavor intentelo de nuevo", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_actActionPerformed

    private void txtbuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscarKeyTyped
/*        char numero = evt.getKeyChar();
        if ((numero < '0' || numero > '9') && (numero != (char) KeyEvent.VK_BACK_SPACE)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Error s√≥lo n√∫meros", "Error", JOptionPane.ERROR_MESSAGE);
        }
        */
    }//GEN-LAST:event_txtbuscarKeyTyped

    private void txt_uidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_uidKeyTyped
        char numero = evt.getKeyChar();
        if ((numero < '0' || numero > '9') && (numero != (char) KeyEvent.VK_BACK_SPACE)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Error s√≥lo n√∫meros", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txt_uidKeyTyped

    private void mi_modpizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_modpizzaActionPerformed
        btn_actpizza.setEnabled(true);
        int fila = t_pizzas.getSelectedRow();
        idp = (String) t_pizzas.getValueAt(fila, 0);
        if (fila >= 0) {
            txt_idpizza.setText(t_pizzas.getValueAt(fila, 0).toString());
            txt_nombrepizza.setText(t_pizzas.getValueAt(fila, 1).toString());
            txt_tipopizza.setText(t_pizzas.getValueAt(fila, 2).toString());
            txt_preciopizza.setText(t_pizzas.getValueAt(fila, 3).toString());
        } else {
            JOptionPane.showMessageDialog(null, "No selecciono fila");
        }
    }//GEN-LAST:event_mi_modpizzaActionPerformed

    private void btn_actpizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actpizzaActionPerformed
        Double precio = 0.0;
        if ((txt_preciopizza.getText().trim().equals(""))) {
            JOptionPane.showMessageDialog(null, "Todos los campos son obligatorios. Porfavor intentelo de nuevo", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                precio = Double.parseDouble(txt_preciopizza.getText());
            } catch (NumberFormatException e) {
                if (e.getMessage().equals("multiple points")) {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese un numero valido", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            try {
                PreparedStatement pst = cn.prepareStatement("UPDATE pizza SET precio='" + precio + "' WHERE id_pizza= '" + idp + "'");
                pst.executeUpdate();
                mostrardatos1("");
                limpiar1();
            } catch (Exception e) {
                System.err.println(e.getMessage());
            }
            JOptionPane.showMessageDialog(null, "Su producto se ha actualizado con exito.", "¬°Actualizaci√≥n exitosa!", JOptionPane.DEFAULT_OPTION);
        }
    }//GEN-LAST:event_btn_actpizzaActionPerformed

    private void mi_actbeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_actbeActionPerformed
        btn_actbebidas.setEnabled(true);
        int fila = t_bebidas.getSelectedRow();
        idb = (String) t_bebidas.getValueAt(fila, 0);
        if (fila >= 0) {
            txt_idbebidas.setText(t_bebidas.getValueAt(fila, 0).toString());
            txt_nombrebebidas.setText(t_bebidas.getValueAt(fila, 1).toString());
            txt_preciobebidas.setText(t_bebidas.getValueAt(fila, 2).toString());
        } else {
            JOptionPane.showMessageDialog(null, "No selecciono fila");
        }
    }//GEN-LAST:event_mi_actbeActionPerformed

    private void btn_actbebidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actbebidasActionPerformed
        Double precio = 0.0;
        if ((txt_preciobebidas.getText().trim().equals(""))) {
            JOptionPane.showMessageDialog(null, "Todos los campos son obligatorios. Porfavor intentelo de nuevo", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                precio = Double.parseDouble(txt_preciobebidas.getText());
            } catch (NumberFormatException e) {
                if (e.getMessage().equals("multiple points")) {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese un numero valido", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            try {
                PreparedStatement pst = cn.prepareStatement("UPDATE bebidas SET precio='" + precio + "' WHERE id_bebidas= '" + idb + "'");
                pst.executeUpdate();
                mostrardatos2("");
                limpiar2();
            } catch (Exception e) {
                System.err.println(e.getMessage());
            }
            JOptionPane.showMessageDialog(null, "Su producto se ha actualizado con exito.", "¬°Actualizaci√≥n exitosa!", JOptionPane.DEFAULT_OPTION);
            btn_actbebidas.setEnabled(false);
        }
    }//GEN-LAST:event_btn_actbebidasActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        limpiar();
        btn_act.setEnabled(false);
        btn_reg.setEnabled(true);
        btn_cancelar.setVisible(false);
    }//GEN-LAST:event_btn_cancelarActionPerformed
    //metodos para limpiar campos

    void limpiar() {
        txt_uid.setText("");
        txt_newuser.setText("");
        passf_pass.setText("");
        passf_confirm.setText("");
    }

    void limpiar1() {
        txt_idpizza.setText("");
        txt_nombrepizza.setText("");
        txt_tipopizza.setText("");
        txt_preciopizza.setText("");
    }

    void limpiar2() {
        txt_idbebidas.setText("");
        txt_nombrebebidas.setText("");
        txt_preciobebidas.setText("");
    }

    //funcion para encriptar md5
    public static String md5(String clear) throws Exception {
        MessageDigest md = MessageDigest.getInstance("MD5");
        byte[] b = md.digest(clear.getBytes());
        int size = b.length;
        StringBuilder h = new StringBuilder(size);
        //algoritmo y arreglo md5
        for (int i = 0; i < size; i++) {
            int u = b[i] & 255;
            if (u < 16) {
                h.append("0" + Integer.toHexString(u));
            } else {
                h.append(Integer.toHexString(u));
            }
        }
        //clave encriptada
        return h.toString();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                admin dialog = new admin(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu PopupMenu1;
    private javax.swing.JPopupMenu PopupMenu2;
    private javax.swing.JPopupMenu PopupMenu3;
    private javax.swing.JButton btn_act;
    private javax.swing.JButton btn_actbebidas;
    private javax.swing.JButton btn_actpizza;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_reg;
    private javax.swing.JButton btnbuscar;
    private javax.swing.JButton btnmd;
    private javax.swing.JComboBox cb_tipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenuItem mi_actbe;
    private javax.swing.JMenuItem mi_eliminar;
    private javax.swing.JMenuItem mi_mod;
    private javax.swing.JMenuItem mi_modpizza;
    private javax.swing.JPanel panel_bebidas;
    private javax.swing.JPanel panel_pizzas;
    private javax.swing.JPanel panel_users;
    private javax.swing.JPasswordField passf_confirm;
    private javax.swing.JPasswordField passf_pass;
    private javax.swing.JTable t_bebidas;
    private javax.swing.JTable t_pizzas;
    private javax.swing.JTable t_users;
    private javax.swing.JTextField txt_idbebidas;
    private javax.swing.JTextField txt_idpizza;
    private javax.swing.JTextField txt_newuser;
    private javax.swing.JTextField txt_nombrebebidas;
    private javax.swing.JTextField txt_nombrepizza;
    private javax.swing.JTextField txt_preciobebidas;
    private javax.swing.JTextField txt_preciopizza;
    private javax.swing.JTextField txt_tipopizza;
    private javax.swing.JTextField txt_uid;
    private javax.swing.JTextField txtbuscar;
    // End of variables declaration//GEN-END:variables
    conectar cc = new conectar();
    Connection cn = cc.conexion();

    private String hash(char[] password) {
        throw new UnsupportedOperationException("Not yet implemented");
    }
}
